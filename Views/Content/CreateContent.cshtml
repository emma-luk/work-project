@using Fpm.MainUI
@using Fpm.MainUI.Helpers
@model Fpm.ProfileData.Entities.Profile.ContentItem
<link href="@(AppConfig.JsPath)tiny_mce/skins/lightgray/skin.min.css" rel="stylesheet" type="text/css" />
<script src="@(AppConfig.JsPath)tiny_mce/tinymce.min.js" type="text/javascript"></script>
<script src="@(AppConfig.JsPath)tiny_mce/jquery.tinymce.min.js" type="text/javascript"></script>
<script src="@(AppConfig.JsPath)content-management.js" type="text/javascript"></script>

@{ Layout = "~/Views/Shared/_LayoutPage.cshtml"; }
@{
    ViewBag.Title = "FPM - Create Content";
}

<div class="standardWidth">
    @using (Html.BeginForm("InsertContent", "Content", FormMethod.Post, new { id = "SaveNewContent" }))
    {
        <h2 class="subheading">New Content</h2>
        
        <div class="delete-indicators">
            <label class="content-item-detail-label">Profile:</label>@Html.DropDownList("selectedProfile", Model.ProfileList, new { @class = "create-indicator-dropdown" })
        </div>
        <div class="delete-indicators">
            <label class="content-item-detail-label">Content Key:</label>
            @Html.TextBoxFor(model => model.ContentKey, new { @class = "unselected-domain" })
            <span class="field-validation-valid" data-valmsg-for="ContentKey" data-valmsg-replace="true"></span>
        </div>
        <div class="delete-indicators">
            <label class="content-item-detail-label">Description:</label>
            @Html.TextBoxFor(model => model.Description, new { @class = "unselected-domain" })
            <span class="field-validation-valid" data-valmsg-for="Description" data-valmsg-replace="true"></span>
        </div>

        var isUserAdmin = UserDetails.CurrentUser().IsAdministrator;
        if (isUserAdmin)
        {
            <div class="delete-indicators">
                <label class="content-item-detail-label">Plain text:</label>
                @Html.CheckBoxFor(model => model.PlainTextContent)
            </div>
        }
        else
        {
            @Html.HiddenFor(x => x.PlainTextContent)
        }
        
        <p class="warning" id="ContentWarning" style="display: none;">This content item is set to be plain text. Any HTML entered below will be converted to plain text when saved.</p>

        <div id="html-editor">
            @Html.TextAreaFor(m => m.Content, new { @class = "tinymce", style = "width: 100%;" })
        </div>

        @Html.HiddenFor(x => x.Id)
        @Html.HiddenFor(x => x.ProfileId)
        @Html.HiddenFor(x => x.ReturnUrl)

        <p>
            <input class="medium-button" id="Confirm" type="submit" value="Confirm" />
        </p>
        <p>
            <input class="medium-button" id="CancelBtn" type="button" onclick="location.href='@Model.ReturnUrl    '" value="Cancel" />
        </p>
    }
</div>
