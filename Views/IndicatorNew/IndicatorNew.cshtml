@using Fpm.MainUI
@using Fpm.MainUI.Helpers
@using Fpm.ProfileData.Entities.Profile
@model IList<IndicatorMetadataTextProperty>
@{
    ViewBag.Title = "FPM - New Indicator";
 }
@{ Layout = "~/Views/Shared/_LayoutPage.cshtml"; }
<script src="@(AppConfig.JsPath)chosen.jquery.min.js" type="text/javascript"></script>
<script src="@(AppConfig.JsPath)PageIndicatorEdit.js" type="text/javascript"></script>
<script src="@(AppConfig.JsPath)tiny_mce/tinymce.min.js" type="text/javascript"></script>
<script src="@(AppConfig.JsPath)tiny_mce/jquery.tinymce.min.js" type="text/javascript"></script>
<link href="@(AppConfig.CssPath)chosen/chosen.min.css" rel="stylesheet" type="text/css" />

<script type="text/javascript">
    $(function () {
        $("#tabs").tabs();
    });
</script>

@Html.Hidden("userMTVChanges")
<div id="popupDiv" style="display: none;">
    <div style="width: 100%; height: 250px;">
        <h4>
            <div id="confirm-new-indicator">
                <p class="sub-title">
                    Save Indicator Metadata Summary
                </p>
                <p class="confirm-sub-title">
                    You are creating a new indicator in:
                </p>
                <p class="confirm-sub-title">
                </p>
                Profile:
                <label class="confirm-sub-title" id="popup-profile-confirm-label">
                </label>
                <p>
                <p class="confirm-sub-title">
                </p>
                Domain:
                <label class="confirm-sub-title" id="popup-domain-confirm-label">
                </label>
                </p>
                <p class="confirm-sub-title">
                </p>
                <input id="confirm-ok" class="medium-button" type="button" value="OK" />
                <input id="Cancel" class="medium-button" type="button" value="Cancel" onclick="lightbox.hide()" />
            </div>
            <div id="indicator-created" style="display: none;">
                <p class="sub-title">
                    New Indicator Created:
                </p>
                <label class="confirm-sub-title" id="popup-domain-new-indicator-label">
                </label>
                <p class="confirm-sub-title">
                </p>
                <div id="new_indicator_button">
                    <a id="new_indicators" class="medium-button" href="/ProfilesAndIndicators">OK</a>
                </div>
            </div>
        </h4>
    </div>
</div>
<div id="tabs" class="standardWidth indicator-edit">
    <div class="button-panel">
        <a class="small-button" id="Home" href="/ProfilesAndIndicators">Cancel</a>
        <a class="save-new-indicator small-button" id="save" href="#" style="display: block;">
            Save
        </a>
    </div>
    <ul>
        <li id="tab1" class="section-tab"><a class="sub-title-error" href="#tabs-1">Step 1 - Indicator Metadata Text</a></li>
        <li id="tab2" class="section-tab sub-title-error"><a href="#tabs-2">Step 2 - Indicator Metadata Other</a></li>
        <li id="tab3" class="section-tab sub-title-error"><a href="#tabs-3">Step 3 - Profile Data Selection</a></li>
    </ul>
    <div id="tabs-1">
        <table id="text-properties" class="text-properties">
            <tr>
                <td></td>
                <td style="vertical-align: middle;"></td>
            </tr>
            @foreach (IndicatorMetadataTextProperty textProperty in Model)
            {
                var propertyId = textProperty.PropertyId;
                var isHtmlAllowed = textProperty.IsHtml;

                <tr>
                    @if (textProperty.IsMandatory)
                    {
                        <td class="property-heading mandatory-label">
                            * @textProperty.DisplayName
                        </td>
                    }
                    else
                    {
                        <td class="property-heading">
                            @textProperty.DisplayName
                        </td>
                    }
                    <td>
                        @if (textProperty.IsMandatory)
                        {
                            <textarea id="v@(propertyId)" rows="2" onfocus=" textEnter(this) " onblur=" textOut(this) " onkeydown=" textKeyDown(this) " class="indicator-text mandatory-input @(isHtmlAllowed ? "html-allowed" : "")"></textarea>
                        }
                        else
                        {
                            <textarea id="v@(propertyId)" rows="2" onfocus="textEnter(this)" onblur="textOut(this)" onkeydown="textKeyDown(this)" class="indicator-text @(isHtmlAllowed ? "html-allowed" : "")"></textarea>
                        }
                    <td class="property-attributes">
                        @if (textProperty.IsSearchable)
                        {
                            <span title="This text is used for a Fingertips indicator search">Searchable</span>
                        }
                        @if (textProperty.IsHtml)
                        {
                            <span title="This property can be displayed as either HTML or plain text">HTML</span>
                        }
                    </td>
                    </td>
                </tr>
            }
        </table>
    </div>
    <div id="tabs-2">
        <div>
            <label class="associated-detail-label">
                Value Type
            </label>
            @Html.DropDownList("selectedValueType", null, "Please select...", new { @class = "create-indicator-dropdown dropdown-not-selected" })
        </div>
        <div>
            <label class="associated-detail-label">
                CI Method
            </label>
            @Html.DropDownList("selectedCIMethodType", null, "Please select...", new { @class = "create-indicator-dropdown dropdown-not-selected" })
        </div>
        <div>
            <label class="associated-detail-label">
                CI Confidence Level
            </label>
            @Html.DropDownList("selectedCIConfidenceLevel", CommonUtilities.GetListOfCiConfidenceLevels(), new { @Name = "selectedCIConfidenceLevel", @class = "create-indicator-dropdown dropdown-selected validate-required" })
        </div>
        <div>
            <label class="associated-detail-label">
                Unit
            </label>
            @Html.DropDownList("selectedUnitType", null, "Please select...", new { @class = "create-indicator-dropdown dropdown-not-selected" })
        </div>
        <div>
            <label class="associated-detail-label">
                Denominator
            </label>
            @Html.DropDownList("selectedDenominatorType", null, "Please select...",
            new { @class = "create-indicator-dropdown dropdown-not-selected" })
        </div>
        <div>
            <label class="associated-detail-label">
                Year Type
            </label>
            @Html.DropDownList("selectedYearType", null, "Please select...", new { @class = "create-indicator-dropdown dropdown-not-selected" })
        </div>
        <div>
            <label class="associated-detail-label">
                Decimal places to display
            </label>
            @Html.DropDownList("selectedDecimalPlaces", CommonUtilities.GetListOfDecimalPlaces(),
                new { @class = "create-indicator-dropdown ignore-validation" })
        </div>
        <div>
            <label class="associated-detail-label">
                Target
            </label>
            @Html.DropDownList("selectedTargetId", CommonUtilities.GetListOfTargets(),
                    new { @class = "create-indicator-dropdown ignore-validation" })
        </div>
    </div>
    <div id="tabs-3">
        <div>
            <label class="associated-detail-label">
                Profile
            </label>
            @Html.DropDownList("selectedProfile", (IEnumerable<SelectListItem>)ViewBag.ListOfProfiles, "Please select...", new { @class = "create-indicator-dropdown dropdown-not-selected" })
        </div>
        <div>
            <label class="associated-detail-label">
                Domain
            </label>
            @Html.DropDownList("selectedDomain", (IEnumerable<SelectListItem>)ViewBag.listOfDomains, "Please select...", new { @class = "create-indicator-dropdown dropdown-not-selected" })
        </div>
        <div class="separator">
        </div>
        <div>
            <label class="associated-detail-label">
                Area Type
            </label>
            @Html.DropDownList("selectedAreaType", CommonUtilities.GetListOfSupportedAreaTypes(PleaseSelectOption.Required), new { @class = "create-indicator-dropdown dropdown-not-selected" })
        </div>
        <div>
            <label class="associated-detail-label">
                Sex
            </label>
            
            @Html.DropDownList("selectedSex", null,"Please select...", new { @class = "create-indicator-dropdown dropdown-not-selected" })
                        
        </div>
        <div>
            <label class="associated-detail-label">
                Age Range
            </label>
            @Html.DropDownList("selectedAge", null,"Please select...", new { @class = "create-indicator-dropdown dropdown-not-selected" })
        </div>
        <div>
            <label class="associated-detail-label">
                Comparator
            </label>
            @Html.DropDownList("selectedComparator", null, new { @class = "create-indicator-dropdown" })
        </div>
        <div>
            <label class="associated-detail-label">
                Comparator Methods
            </label>
            @Html.DropDownList("selectedComparatorMethod", null, "Please select...", new { @class = "create-indicator-dropdown dropdown-not-selected" })
        </div>
        <div>
            <label class="associated-detail-label">
                Comparator Confidence
            </label>
            @Html.DropDownList("selectedComparatorConfidence", CommonUtilities.GetListOfComparatorConfidences(), new { @class = "create-indicator-dropdown dropdown-not-selected" })
        </div>
        <div>
            <label class="associated-detail-label">
                Year Range
            </label>
            @Html.DropDownList("selectedYearRange", CommonUtilities.GetListOfYearRanges(PleaseSelectOption.Required), new { @class = "create-indicator-dropdown dropdown-not-selected" })
        </div>
        <div>
            <label class="associated-detail-label">
                Time Series
            </label>
            @Html.DropDownList("selectedFrequency", CommonUtilities.GetFrequencies(PleaseSelectOption.Required), new { @class = "create-indicator-dropdown dropdown-not-selected" })
        </div>
        <div>
            <label class="associated-detail-label">
                Polarity
            </label>
            @Html.DropDownList("selectedPolarityType", CommonUtilities.GetListOfPolarityTypes(PleaseSelectOption.Required),
                new { @class = "create-indicator-dropdown dropdown-not-selected" })
        </div>
        <div id="annual-range-selection" style="display: block;">
            <div>
                <label class="associated-detail-label">
                    Start Year
                </label>
                @Html.TextBox("startYear", null, new { @class = "year-Range create-indicator-dropdown dropdown-not-selected", @Style = "Width: 100px;" })
            </div>

            <div>
                <label class="associated-detail-label">
                    End Year
                </label>
                @Html.TextBox("endYear", null, new { @class = "year-Range create-indicator-dropdown dropdown-not-selected", @Style = "Width: 100px;" })
            </div>
        </div>
        <div id="quarterly-range-selection" style="display: none;">
            <div>
                <label class="associated-detail-label">
                    Start Quarter
                </label>
                @Html.DropDownList("startQuarterRange", new SelectList(CommonUtilities.GetQuarters(), "Text", "Value", "0"), new { @class = "create-indicator-dropdown", @Style = "Width: 100px;" })
            </div>
            <div>
                <label class="associated-detail-label">
                    End Quarter
                </label>
                @Html.DropDownList("endQuarterRange", new SelectList(CommonUtilities.GetQuarters(), "Text", "Value", "0"), new { @class = "create-indicator-dropdown", @Style = "Width: 100px;" })
            </div>
        </div>
        <div id="monthly-range-selection" style="display: none;">
            <div>
                <label class="associated-detail-label">
                    Start Month
                </label>
                @Html.DropDownList("startMonthRange", new SelectList(CommonUtilities.GetMonths(), "Text", "Value", "0"), new { @class = "create-indicator-dropdown", @Style = "Width: 100px;" })
            </div>
            <div>
                <label class="associated-detail-label">
                    End Month
                </label>
                @Html.DropDownList("endMonthRange", new SelectList(CommonUtilities.GetMonths(), "Text", "Value", "0"), new { @class = "create-indicator-dropdown", @Style = "Width: 100px;" })
            </div>
        </div>
    </div>
</div>

@Html.Partial("_EditMetaDataText")
