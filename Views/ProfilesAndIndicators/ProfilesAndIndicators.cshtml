@using Fpm.MainUI
@using Fpm.MainUI.Helpers
@model Fpm.MainUI.Models.IndicatorGridModel
@{ Layout = "~/Views/Shared/_LayoutPage.cshtml"; }
@{
    ViewBag.Title = "FPM - Profiles & indicators";
    var isUserAdmin = UserDetails.CurrentUser().IsAdministrator;
}

<link href="@(AppConfig.CssPath)TableSorter.css" rel="stylesheet" type="text/css" />
<script src="@(AppConfig.JsPath)jquery.watermark.min.js" type="text/javascript"></script>

<script src="@(AppConfig.JsPath)PageProfilesAndIndicators.js" type="text/javascript"></script>
<script src="@(AppConfig.JsPath)PageCoreData.js" type="text/javascript"></script>


<script type="text/javascript">
    FT = {
        model: {
            profileId : @Model.Profile.Id,
            areaTypeId : @Model.SelectedAreaTypeId
            }
    };
</script>

<div class="standardWidth">

    @using (Html.BeginForm("SortPageAndFilter", "ProfilesAndIndicators", FormMethod.Get, new { id = "IndicatorManagementForm" }))
    {
        <div class="subheading clearfix">
            <h2 style="float: left;">Profiles & indicators</h2>

            @if (Model.Profile.IsProfileViewable)
            {
                <div class="right-info clearfix">
                    <a href="@CommonUtilities.GetTestSiteUrl(Model)" target="_blank">View selected profile in Fingertips</a>
                </div>
            }

            <div class="right-info clearfix">
                Profile contact: <a href="mailto:@Model.EmailAddress?subject=@Model.Profile.Name" title="Send an email regarding the current profile">@Model.ContactUserName</a>
            </div>
        </div>

        if (isUserAdmin)
        {
            <div class="clearfix">
                <span class="info-for-admins">Area Type ID: @Model.SelectedAreaTypeId</span>
                <span class="info-for-admins">Group ID: @Model.SelectedGroupId</span>
                <span class="info-for-admins">Profile ID: @Model.Profile.Id</span>
            </div>
        }

        <div class="button-box clearfix">
            <b>Profile:</b>
            @Html.DropDownListFor(model => model.ProfileKey, Model.ProfileList, new { Id = "selectedProfile" })
            <b>Domain:</b>
            @Html.DropDownListFor(model => model.DomainSequence, Model.DomainList, new { Id = "selectedDomain" })

            @if (Model.AreaTypeList != null)
            {
                <b>Area:</b>
                @Html.DropDownListFor(model => model.Profile.SelectedAreaType, Model.AreaTypeList,
                    new { Id = "SelectedAreaTypeId", Name = "SelectedAreaTypeId", style = "width: 150px;" })
            }
            @Html.Hidden("sortBy", Model.SortBy)
            @Html.Hidden("ascending", Model.SortAscending)
            <input type="hidden" id="resetArea" name="resetArea" value="false" />
        </div>

        <div class="filtering button-box clearfix">
            <b>Indicator Id:</b> @Html.TextBoxFor(model => model.IndicatorId,
                                     new { size = 10, Id = "IndicatorId", Name = "IndicatorId", @class = "search-watermark", placeholder = "Enter Indicator Id" })
            <b>Indicator text:</b> @Html.TextBoxFor(model => model.IndicatorText,
                                       new { size = 50, Id = "search_text", Name = "search_text", @class = "search-watermark", placeholder = "Enter Search Term - Min. 3 Characters" })

            <b>
                <input type="submit" id="filter-domain" class="show-spinner search-button" value="Filter this domain" />
                <input type="button" id="searchAll" class="search-button" value="Search all profiles" />
            </b>
        </div>
        <table class="grid sortable">
            <thead>
                <tr>
                    <th class="header">Seq</th>
                    <th class="header">Id</th>
                    <th class="header">Indicator Name</th>
                    <th class="header">Sex</th>
                    <th class="header">Age Id</th>
                    <th class="header">From</th>
                    <th class="header">To</th>
                    <th class="header">Benchmarking Method</th>
                    <th>
                        Select @Html.CheckBox("select-all", false, new { @class = "select-all-check-box" })
                    </th>
                    <th>Data</th>
                </tr>
            </thead>
            @foreach (var item in Model.IndicatorNamesGrid)
            {
                var timePeriodHelper = new TimePeriodHelper(item);
                var later = timePeriodHelper.GetPeriodIfLaterThanDatapoint();

                <tr>
                    <td class="left">
                        @item.Sequence
                    </td>
                    <td class="left">
                        <a class="edit-link" href="@(Model.GetIndicatorUrl(item.IndicatorId, item.AgeId, item.SexId))">@item.IndicatorId</a>
                    </td>
                    <td class="left">
                        <a class="edit-link" href="@(Model.GetIndicatorUrl(item.IndicatorId, item.AgeId, item.SexId))">@item.IndicatorName</a>
                    </td>
                    <td class="left">
                        @item.Sex
                    </td>
                    <td class="left">
                        @item.Age (@item.AgeId)
                    </td>
                    <td class="left">
                        @timePeriodHelper.GetBaselineString()
                    </td>
                    <td class="left">
                        @if (later != null)
                        {
                            <a class="info-tooltip text-tooltip later-period"
                               laterstring="@timePeriodHelper.GetLatestPeriodString()"
                               year="@later.Year" quarter="@later.Quarter" month="@later.Month"
                               indicatorid="@item.IndicatorId" sexid="@item.SexId" ageid="@item.AgeId" yearrange="@later.YearRange">
                                @timePeriodHelper.GetDatapointString()
                            </a>
                        }
                        else
                        {
                            @timePeriodHelper.GetDatapointString()
                        }
                    </td>
                    @if (item.ComparatorConfidence != "" && item.ComparatorConfidence != "-1")
                    {
                        <td class="left">
                            @item.ComparatorMethod (@item.ComparatorConfidence)
                        </td>
                    }
                    else
                    {
                        <td class="left">
                            @item.ComparatorMethod
                        </td>
                    }
                    <td class="center">
                        @Html.CheckBox(item.IndicatorId + "_selected", false,
                            new
                            {
                                @class = "indicator-check-box",
                                @value = item.IndicatorId + "~" + item.SexId + "~" + item.AgeId
                            })
                    </td>
                    <td class="center">
                        <input type="button" class="view-indicator-data-btn" id="view-data-@item.IndicatorId" value="View Data"  indicatorname="@item.IndicatorName" />
                    </td>
                </tr>
            }
        </table>
    }
    @Html.Partial("_GridEditDomains", Model)
    @{
        var userHasAssignedProfiles = Model.UserHasAssignedPermissions ? "block" : "none";
        var userHasWritePermissions = Model.UserGroupPermissions == null ? "none" : "inline";
        var isArchiveProfile = Model.IsArchiveProfile() ? "none" : "inline";
    }
    <div class="button-box" style="display: @userHasAssignedProfiles" />
    @if (CommonUtilities.IsReadOnlyMode())
    {
        <input type="button" id="edit_Domains" value="Manage Domains" disabled="disabled" style="display: @userHasWritePermissions" />
        <input type="button" id="reorder_Indicators" value="Reorder Indicators" disabled="disabled" style="display: @userHasWritePermissions" />
        <input type="button" value="New Indicator" onclick=" location.href='@Url.Action("IndicatorNew", "IndicatorNew")    ' " disabled=" disabled" />

        <div class="divRight">
            <input type="button" id="audit_history" value="Show History" />
            <input type="button" id="delete-indicators-button" value="Remove Indicators" disabled="disabled" style="display: @userHasWritePermissions" />
            <input type="button" id="move-indicators-button" value="Move Indicators" disabled="disabled" style="display: @userHasWritePermissions" />
            <input type="button" id="copy-indicators-button" value="Copy Indicators" disabled="disabled" />
        </div>
    }
    else
    {
        <input type="button" id="edit_Domains" value="Manage domains" style="display: @userHasWritePermissions" />
        <input type="button" id="reorder_Indicators" value="Reorder indicators" style="display: @userHasWritePermissions" />
        <input type="button" value="New indicator" onclick=" location.href='@Url.Action("IndicatorNew", "IndicatorNew")    ' " />
        <div class="divRight">
            <input type="button" id="audit_history" value="Show history" />
            <input type="button" id="delete-indicators-button" value="Remove indicators" style="display: @userHasWritePermissions" />
            <input type="button" id="move-indicators-button" value="Move indicators" style="display: @userHasWritePermissions" />
            <input type="button" id="copy-indicators-button" value="Copy indicators" style="display: @isArchiveProfile" />
        </div>
    }
</div>
</div>


<div class="a-modal">
    <!-- Place at bottom of page -->
</div>

